#!/usr/bin/env ruby
require 'time'
require 'rubygems'
require 'mysql2'
require 'fileutils'
require 'facets/file/sanitize'
require 'yaml'


config = YAML::load_file(File.join(File.dirname(File.expand_path(__FILE__)), 'config.yml'))

VCFS_DIR = config["directories"]["contacts"] || './contacts'
VTODO_DIR = config["directories"]["todos"] || './todos'
ICS_DIR = config["directories"]["calendar"] || './calendar'

FileUtils.mkdir_p VCFS_DIR
FileUtils.mkdir_p ICS_DIR

def full_autocommit message='autocommit'
  `git add -A`
  `git diff --cached --exit-code`
  has_changes = $?.exitstatus != 0
  if has_changes
    system "git commit -m \"#{message}\""
  end
  has_changes
end

def sanitize name
  out = File.sanitize("#{name.gsub(/[,&%\\\/]/, '_')}").gsub(/_+/, '_')
end

client = Mysql2::Client.new(
  host: config["database"]["host"],
  username: config["database"]["username"],
  password: config["database"]["password"]
)

send_mail = false

Dir.chdir(VCFS_DIR) do
  FileUtils.rm_r(Dir.glob('*'))

  config["addressbook_ids"].each do |addressbook_id|
    rows = client.query "SELECT uri, carddata, value AS fullname from #{config["database"]["database"]}.#{config["database"]["cards_table"]}, #{config["database"]["database"]}.#{config["database"]["cards_properties_table"]} WHERE oc_cards.id = oc_cards_properties.cardid AND name = 'FN' AND oc_cards.addressbookid = #{addressbook_id};"
    rows.each do |row|
      File.open(sanitize("#{row['fullname']} - #{row['uri']}"), 'wb') do |outfile|
        outfile << row["carddata"]
      end
    end
  end

  send_mail = full_autocommit
end
system "bundle exec ruby changemailer.rb \"#{VCFS_DIR}\"" if send_mail


Dir.chdir(ICS_DIR) do
  FileUtils.rm_r(Dir.glob('*'))

  config["calendar_ids"].each do |cal_id|
    rows = client.query "SELECT uri, calendardata, firstoccurence FROM #{config["database"]["database"]}.#{config["database"]["calendar_table"]} WHERE calendarid = #{cal_id} AND componenttype = 'VEVENT';"
    rows.each do |row|
      time = Time.at(row['firstoccurence'])
      year = time.strftime('%Y')
      summary = "no summary"
      row['calendardata'].lines.each do |line|
        match = /\ASUMMARY:\s*(.+)\Z/i.match(line)
        if match
          summary = match[1].strip
          break
        end
      end
      FileUtils.mkdir(year) unless File.exist? year
      File.open(File.join(year, sanitize("#{time.strftime('%F')} #{summary} - #{row['uri']}")), 'wb') do |outfile|
        outfile << row["calendardata"]
      end
    end
  end

  send_mail = full_autocommit
end
system "bundle exec ruby changemailer.rb \"#{ICS_DIR}\"" if send_mail

Dir.chdir(VTODO_DIR) do
  FileUtils.rm_r(Dir.glob('*'))

  config["calendar_ids"].each do |cal_id|
    rows = client.query "SELECT uri, calendardata, lastmodified FROM #{config["database"]["database"]}.#{config["database"]["calendar_table"]} WHERE calendarid = #{cal_id} AND componenttype = 'VTODO';"
    rows.each do |row|
      defaulttime = Time.at(row['lastmodified'])
      completed = created = nil
      summary = "no summary"
      row['calendardata'].lines.each do |line|
        match = /\ASUMMARY:\s*(.+)\Z/i.match(line)
        if match
          summary = match[1].strip
        end
        match = /\ACREATED:\s*(.+)\Z/i.match(line)
        if match
          created = DateTime.iso8601(match[1].strip)
        end
        match = /\ACOMPLETED:\s*(.+)\Z/i.match(line)
        if match
          completed = DateTime.iso8601(match[1].strip)
        end
      end
      time = completed || created || defaulttime
      year = time.strftime('%Y')
      FileUtils.mkdir(year) unless File.exist? year
      File.open(File.join(year, sanitize("#{time.strftime('%F')} #{summary} - #{row['uri']}")), 'wb') do |outfile|
        outfile << row["calendardata"]
      end
    end
  end

  send_mail = full_autocommit
end
system "bundle exec ruby changemailer.rb \"#{VTODO_DIR}\"" if send_mail
